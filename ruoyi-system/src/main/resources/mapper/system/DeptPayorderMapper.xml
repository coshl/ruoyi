<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.DeptPayorderMapper">
    
    <resultMap type="DeptPayorder" id="DeptPayorderResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="deptName"    column="dept_name"    />
        <result property="status"    column="status"    />
        <result property="failCause"    column="fail_cause"    />
        <result property="report"    column="report"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectDeptPayorderVo">
        select id, user_id, dept_name, status, fail_cause, report, create_time, update_time from dept_payorder
    </sql>

    <select id="selectDeptPayorderList" parameterType="DeptPayorder" resultMap="DeptPayorderResult">
        <include refid="selectDeptPayorderVo"/>
        <where>
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="deptName != null  and deptName != ''"> and dept_name like concat('%', #{deptName}, '%')</if>
            <if test="status != null "> and status = #{status}</if>
            <if test="failCause != null  and failCause != ''"> and fail_cause = #{failCause}</if>
            <if test="report != null  and report != ''"> and report = #{report}</if>
        </where>
        ORDER BY id desc
    </select>
    
    <select id="selectDeptPayorderById" parameterType="Long" resultMap="DeptPayorderResult">
        <include refid="selectDeptPayorderVo"/>
        where id = #{id}
    </select>
    
    <insert id="insertDeptPayorder" parameterType="DeptPayorder" useGeneratedKeys="true" keyProperty="id">
        insert into dept_payorder
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="deptName != null">dept_name,</if>
            <if test="status != null">status,</if>
            <if test="failCause != null">fail_cause,</if>
            <if test="report != null">report,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="deptName != null">#{deptName},</if>
            <if test="status != null">#{status},</if>
            <if test="failCause != null">#{failCause},</if>
            <if test="report != null">#{report},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateDeptPayorder" parameterType="DeptPayorder">
        update dept_payorder
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="deptName != null">dept_name = #{deptName},</if>
            <if test="status != null">status = #{status},</if>
            <if test="failCause != null">fail_cause = #{failCause},</if>
            <if test="report != null">report = #{report},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteDeptPayorderById" parameterType="Long">
        delete from dept_payorder where id = #{id}
    </delete>

    <delete id="deleteDeptPayorderByIds" parameterType="String">
        delete from dept_payorder where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
